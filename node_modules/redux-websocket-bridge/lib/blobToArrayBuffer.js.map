{"version":3,"sources":["../src/blobToArrayBuffer.js"],"names":["blobToArrayBuffer","blob","Promise","resolve","reject","fileReader","FileReader","onerror","event","onload","result","readAsArrayBuffer"],"mappings":";;;;;kBAAwBA,iB;AAAT,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC9C,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,aAAa,IAAIC,UAAJ,EAAnB;;AAEAD,eAAWE,OAAX,GAAqB,UAAUC,KAAV,EAAiB;AACpCJ,aAAOI,KAAP;AACD,KAFD;;AAIAH,eAAWI,MAAX,GAAoB,YAAY;AAC9BN,cAAQ,KAAKO,MAAb;AACD,KAFD;;AAIAL,eAAWM,iBAAX,CAA6BV,IAA7B;AACD,GAZM,CAAP;AAaD","file":"blobToArrayBuffer.js","sourcesContent":["export default function blobToArrayBuffer(blob) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.onerror = function (event) {\r\n      reject(event);\r\n    };\r\n\r\n    fileReader.onload = function () {\r\n      resolve(this.result);\r\n    };\r\n\r\n    fileReader.readAsArrayBuffer(blob);\r\n  });\r\n}\r\n"]}