{"version":3,"sources":["../src/isFSA.js"],"names":["FSA_ALLOWED_KEYS","module","exports","isFSA","action","type","error","Object","keys","every","includes","key"],"mappings":";;AAAA,IAAMA,mBAAmB,CAAC,OAAD,EAAU,MAAV,EAAkB,SAAlB,EAA6B,MAA7B,CAAzB;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,KAAT,CAAeC,MAAf,EAAuB;AACtC,SACEA,UACG,OAAOA,OAAOC,IAAd,KAAuB,QAD1B,KAEI,OAAOD,OAAOE,KAAd,KAAwB,SAAxB,IAAqC,OAAOF,OAAOE,KAAd,KAAwB,WAA7D,IAA4EF,OAAOE,KAAP,KAAiB,IAFjG,KAGGC,OAAOC,IAAP,CAAYJ,MAAZ,EAAoBK,KAApB,CAA0B;AAAA,WAAOT,iBAAiBU,QAAjB,CAA0BC,GAA1B,CAAP;AAAA,GAA1B,CAJL;AAMD,CAPD","file":"isFSA.js","sourcesContent":["const FSA_ALLOWED_KEYS = ['error', 'meta', 'payload', 'type'];\r\n\r\nmodule.exports = function isFSA(action) {\r\n  return (\r\n    action\r\n    && typeof action.type === 'string'\r\n    && (typeof action.error === 'boolean' || typeof action.error === 'undefined' || action.error === null)\r\n    && Object.keys(action).every(key => FSA_ALLOWED_KEYS.includes(key))\r\n  );\r\n}\r\n"]}